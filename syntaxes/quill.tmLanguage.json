{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Quill",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#let-declarations"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#conditionals"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#dialog-keywords"
		},
		{
			"include": "#system-messages"
		},
		{
			"include": "#random-blocks"
		},
		{
			"include": "#character-dialog"
		},
		{
			"include": "#labels"
		},
		{
			"include": "#choices"
		},
		{
			"include": "#assignments"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#tags"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.quill",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"dialog-keywords": {
			"patterns": [
				{
					"name": "keyword.control.dialog.quill",
					"match": "\\b(LABEL|CHOICE|GOTO|END|RANDOM|LET|IF|ELSE|SYSTEM)\\b"
				}
			]
		},
		"let-declarations": {
			"patterns": [
				{
					"match": "\\b(LET)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(=)",
					"captures": {
						"1": {
							"name": "keyword.control.dialog.quill"
						},
						"2": {
							"name": "variable.name.quill"
						},
						"3": {
							"name": "keyword.operator.assignment.quill"
						}
					}
				}
			]
		},
		"system-messages": {
			"patterns": [
				{
					"match": "\\b(SYSTEM)\\s*:\\s*(\"[^\"]*\")",
					"captures": {
						"1": {
							"name": "keyword.control.dialog.quill"
						},
						"2": {
							"name": "string.quoted.double.system.quill"
						}
					}
				}
			]
		},
		"conditionals": {
			"patterns": [
				{
					"name": "meta.conditional.quill",
					"begin": "\\b(IF)\\s+",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.dialog.quill"
						}
					},
					"end": "\\{",
					"patterns": [
						{
							"include": "#operators"
						},
						{
							"include": "#literals"
						},
						{
							"include": "#variable-references"
						}
					]
				},
				{
					"name": "meta.else.quill",
					"begin": "\\}\\s*(ELSE)\\s*\\{",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.dialog.quill"
						}
					},
					"end": "(?=\\})",
					"patterns": [
						{
							"include": "#dialog-keywords"
						},
						{
							"include": "#character-dialog"
						},
						{
							"include": "#labels"
						},
						{
							"include": "#assignments"
						}
					]
				}
			]
		},
		"assignments": {
			"patterns": [
				{
					"match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\s*(\\+=|\\-=|\\*=|\\/=|=)",
					"captures": {
						"1": {
							"name": "variable.name.quill"
						},
						"2": {
							"name": "keyword.operator.assignment.quill"
						}
					}
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.comparison.quill",
					"match": "(>=|<=|==|!=|>|<)"
				},
				{
					"name": "keyword.operator.arithmetic.quill",
					"match": "(\\+|\\-|\\*|\\/|%)"
				}
			]
		},
		"literals": {
			"patterns": [
				{
					"name": "constant.language.boolean.quill",
					"match": "\\b(TRUE|FALSE)\\b"
				},
				{
					"name": "constant.numeric.quill",
					"match": "\\b\\d+(\\.\\d+)?\\b"
				}
			]
		},
		"variable-references": {
			"patterns": [
				{
					"name": "variable.other.quill",
					"match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b"
				}
			]
		},
		"random-blocks": {
			"patterns": [
				{
					"name": "meta.random-block.quill",
					"begin": "\\b(RANDOM)\\s*\\{",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.dialog.quill"
						}
					},
					"end": "\\}",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#choices"
						},
						{
							"include": "#character-dialog"
						},
						{
							"include": "#dialog-keywords"
						},
						{
							"include": "#labels"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#tags"
						}
					]
				}
			]
		},
		"character-dialog": {
			"patterns": [
				{
					"match": "^\\s*([A-Za-z_][A-Za-z0-9_]*)\\s*:\\s*(\"[^\"]*\")\\s*(\\[[^\\]]*\\])?",
					"captures": {
						"1": {
							"name": "entity.name.function.character.quill"
						},
						"2": {
							"name": "string.quoted.double.quill"
						},
						"3": {
							"name": "entity.name.tag.quill"
						}
					}
				},
				{
					"match": "([A-Za-z_][A-Za-z0-9_]*)\\s*:\\s*(\"[^\"]*\")\\s*(\\[[^\\]]*\\])?",
					"captures": {
						"1": {
							"name": "entity.name.function.character.quill"
						},
						"2": {
							"name": "string.quoted.double.quill"
						},
						"3": {
							"name": "entity.name.tag.quill"
						}
					}
				},
				{
					"match": "^\\s*([A-Za-z_][A-Za-z0-9_]*)\\s*:\\s*(\\[)",
					"captures": {
						"1": {
							"name": "entity.name.function.character.quill"
						},
						"2": {
							"name": "punctuation.definition.array.begin.quill"
						}
					}
				}
			]
		},
		"labels": {
			"patterns": [
				{
					"match": "\\b(LABEL)\\s+([A-Za-z_][A-Za-z0-9_]*)",
					"captures": {
						"1": {
							"name": "keyword.control.dialog.quill"
						},
						"2": {
							"name": "entity.name.label.quill"
						}
					}
				},
				{
					"match": "\\b(GOTO)\\s+([A-Za-z_][A-Za-z0-9_]*)",
					"captures": {
						"1": {
							"name": "keyword.control.dialog.quill"
						},
						"2": {
							"name": "entity.name.label.reference.quill"
						}
					}
				}
			]
		},
		"choices": {
			"patterns": [
				{
					"name": "meta.choice.quill",
					"begin": "\\{",
					"end": "\\}\\s*(\\[[^\\]]*\\])?",
					"endCaptures": {
						"1": {
							"name": "entity.name.tag.quill"
						}
					},
					"patterns": [
						{
							"include": "#conditionals"
						},
						{
							"include": "#assignments"
						},
						{
							"include": "#dialog-keywords"
						},
						{
							"include": "#character-dialog"
						},
						{
							"include": "#labels"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#tags"
						}
					]
				},
				{
					"name": "meta.choice-options.quill",
					"begin": "\"[^\"]*\"\\s*\\{",
					"end": "\\}",
					"beginCaptures": {
						"0": {
							"patterns": [
								{
									"include": "#strings"
								}
							]
						}
					},
					"patterns": [
						{
							"include": "#conditionals"
						},
						{
							"include": "#assignments"
						},
						{
							"include": "#dialog-keywords"
						},
						{
							"include": "#character-dialog"
						},
						{
							"include": "#labels"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#tags"
						}
					]
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.quill",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.quill",
					"match": "\\\\."
				},
				{
					"name": "variable.interpolation.quill",
					"match": "\\{[A-Za-z_][A-Za-z0-9_]*\\}"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.hash.quill",
					"match": "#.*$"
				}
			]
		},
		"tags": {
			"patterns": [
				{
					"name": "entity.name.tag.quill",
					"match": "\\[[^\\]]*\\]"
				}
			]
		}
	},
	"scopeName": "source.quill"
}